<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd 
		http://www.springframework.org/schema/mvc 
		http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd 
		http://www.springframework.org/schema/context 
		http://www.springframework.org/schema/context/spring-context-3.2.xsd 
		http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop-3.2.xsd 
		http://www.springframework.org/schema/tx 
		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd ">


	<!-- 可以扫描controller、service、DAO... -->
	<context:component-scan base-package="com.*"></context:component-scan>
	<!-- 静态资源访问 -->
	<mvc:resources location="/img/" mapping="/img/**" />
	<mvc:resources location="/js/" mapping="/js/**" />
	<mvc:resources location="/css/" mapping="/css/**" />
	<mvc:resources location="/font/" mapping="/font/**" />
	<mvc:resources location="/upload/" mapping="/upload/**" />
	<mvc:resources location="/shearphoto_common/" mapping="/shearphoto_common/**" />
	<mvc:resources location="/zoomimage/" mapping="/zoomimage/**" />

	<!-- 使用 mvc:annotation-driven代替上边注解映射器和注解适配器配置 mvc:annotation-driven默认加载很多的参数绑定方法， 
		比如json转换解析器就默认加载了，如果使用mvc:annotation-driven不用配置上边的RequestMappingHandlerMapping和RequestMappingHandlerAdapter 
		实际开发时使用mvc:annotation-driven -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
				<constructor-arg value="UTF-8" />
			</bean>
			<bean
				class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
				<property name="objectMapper">
					<bean
						class="org.springframework.http.converter.json.Jackson2ObjectMapperFactoryBean">
						<property name="failOnEmptyBeans" value="false" />
					</bean>
				</property>
			</bean>
		</mvc:message-converters>
	</mvc:annotation-driven>

	<!-- 视图解析器 解析jsp解析，默认使用jstl标签，classpath下的得有jstl的包 -->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<!-- 配置jsp路径的前缀 -->
		<property name="prefix" value="/WEB-INF/jsp/" />
		<!-- 配置jsp路径的后缀 -->
		<property name="suffix" value=".jsp" />
	</bean>
	<!-- 上传文件 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 设置上传文件的最大为100MB -->
		<property name="maxUploadSize">
			<value>104857600</value>
		</property>
	</bean>

	<!-- 配置义拦截器 -->
 	<mvc:interceptors> 
<!--  		<mvc:interceptor>  -->
<!-- 			<mvc:mapping path="/**"/>  -->
<!--  			<bean class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor">  -->
<!--  				<property name="sessionFactory" ref="sessionFactory" />  -->
<!--  			</bean> -->
<!-- 		</mvc:interceptor>  -->
		<mvc:interceptor> 
 			<mvc:mapping path="/*/*"/> 
 			<bean class="com.work.interceptor.LoginInterceptor"></bean> 
 		</mvc:interceptor> 
 	</mvc:interceptors> 
	
	<!-- 通用异常处理器 -->
	<bean id="exceptionResolver" class="com.work.util.CommonExceptionResolver"/>

	<!-- <mvc:interceptors> -->
	<!-- 开启openSessionInView -->
	<!-- <bean class="org.springframework.orm.hibernate3.support.OpenSessionInViewInterceptor"> -->
	<!-- <property name="sessionFactory" ref="sessionFactory" /> -->
	<!-- </bean> -->
	<!-- 自定义的权限拦截验证，如果不定义 mvc:mapping path 将拦截所有的URL请求 -->
	<!-- </mvc:interceptors> -->
</beans>